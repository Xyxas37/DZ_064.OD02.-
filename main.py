import os
import asyncio
import random
import requests
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, FSInputFile
from config import TOKEN, WEATHER_API_KEY
from gtts import gTTS
from googletrans import Translator

bot = Bot(token=TOKEN)
dp = Dispatcher()
registered_users = set()

@dp.message(Command('video'))
async def video(message: Message):
    await bot.send_chat_action(message.chat.id, 'upload_video')
    video = FSInputFile('video.mp4')
    await bot.send_video(message.chat.id, video)

@dp.message(Command('audio'))
async def audio(message: Message):
    audio = FSInputFile('sound.mp3')
    await bot.send_audio(message.chat.id, audio)

@dp.message(Command("weather"))
async def weather(message: Message):
    city = "Moscow"
    api_url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    try:
        response = requests.get(api_url)
        data = response.json()
        if data.get("main"):
            temp = data["main"]["temp"]
            description = data["weather"][0]["description"]
            await message.answer(f"üå¶ –ü–æ–≥–æ–¥–∞ –≤ {city}:\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n–£—Å–ª–æ–≤–∏—è: {description}")
        else:
            await message.answer("‚ùó–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.")
    except Exception:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞.")

@dp.message(F.text == "—á—Ç–æ —Ç–∞–∫–æ–µ –ò–ò?")
async def aitext(message: Message):
    await message.answer(
        '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äî —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å '
        '—Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ —Å—á–∏—Ç–∞—é—Ç—Å—è –ø—Ä–µ—Ä–æ–≥–∞—Ç–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫–∞; '
        '–Ω–∞—É–∫–∞ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω, –æ—Å–æ–±–µ–Ω–Ω–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º'
    )

@dp.message(Command('help'))
async def help(message: Message):
    await message.answer(
        "–≠—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n"
        "/help ‚Äî –ø–æ–º–æ—â—å\n"
        "/myinfo ‚Äî –≤–∞—à Telegram ID\n"
        "/weather ‚Äî –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n"
        "/photo ‚Äî —Å–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞"
    )

@dp.message(CommandStart())
async def start(message: Message):
    user_id = message.from_user.id
    registered_users.add(user_id)
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç–∏–∫–∏, —è –ë–æ–Ω–¥, –î–∂–µ–π–º—Å –ë–æ–Ω–¥\n‚úÖ –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!\n–í–∞—à Telegram ID: {user_id}")

@dp.message(F.photo)
async def save_all_photos(message: Message):
    list_responses = ['–û–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!', '–ù–µ–ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ', '–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–∞–∫–æ–µ –±–æ–ª—å—à–µ']
    rand_answ = random.choice(list_responses)
    await message.answer(rand_answ)

    os.makedirs("img", exist_ok=True)
    photo = message.photo[-1]
    file_id = photo.file_id
    file = await bot.get_file(file_id)
    file_ext = file.file_path.split('.')[-1]
    file_path = f"img/{file_id}.{file_ext}"
    await bot.download(file, destination=file_path)

@dp.message(Command("myinfo"))
async def myinfo(message: Message):
    user_id = message.from_user.id
    if user_id in registered_users:
        await message.answer(f"üßæ –í–∞—à Telegram ID: {user_id}")
    else:
        await message.answer("‚ùó–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ù–∞–∂–º–∏—Ç–µ /start.")

@dp.message(Command('photo'))
async def photo(message: Message):
    list_responses = [
        'https://techoparasol.es/static/main/img/solar-farm.webp',
        'https://techoparasol.es/media/blog_images/Paneles_Solares_y_Almacenamiento_Espa%C3%B1a.webp',
        'https://techoparasol.es/media/blog_images/energia-solar-ley-espana_U82yUtP.webp'
    ]
    rand_photo = random.choice(list_responses)
    await message.answer_photo(photo=rand_photo, caption='—ç—Ç–æ —Ö–æ—Ä–æ—à–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞')

@dp.message(Command('training'))
async def training(message: Message):
    training_list = [
        "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 1: \n1. –°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π \n2. –í–µ–ª–æ—Å–∏–ø–µ–¥: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π (–∫–∞–∂–¥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞) \n3. –ü–ª–∞–Ω–∫–∞: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 30 —Å–µ–∫—É–Ω–¥",
        "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 2: \n1. –ü–æ–¥—ä–µ–º—ã –Ω–æ–≥: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π \n2. –†—É—Å—Å–∫–∏–π —Ç–≤–∏—Å—Ç: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π (–∫–∞–∂–¥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞) \n3. –ü–ª–∞–Ω–∫–∞ —Å –ø–æ–¥–Ω—è—Ç–æ–π –Ω–æ–≥–æ–π: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 —Å–µ–∫—É–Ω–¥ (–∫–∞–∂–¥–∞—è –Ω–æ–≥–∞)",
        "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ 3: \n1. –°–∫—Ä—É—á–∏–≤–∞–Ω–∏—è —Å –ø–æ–¥–Ω—è—Ç—ã–º–∏ –Ω–æ–≥–∞–º–∏: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 15 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π \n2. –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –Ω–æ–∂–Ω–∏—Ü—ã: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π \n3. –ë–æ–∫–æ–≤–∞—è –ø–ª–∞–Ω–∫–∞: 3 –ø–æ–¥—Ö–æ–¥–∞ –ø–æ 20 —Å–µ–∫—É–Ω–¥ (–∫–∞–∂–¥–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)"
    ]
    rand_tr = random.choice(training_list)
    await message.answer(f"–≠—Ç–æ –≤–∞—à–∞ –º–∏–Ω–∏-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è {rand_tr}")
    tts = gTTS(text=rand_tr, lang='ru')
    tts.save("training.ogg")
    audio = FSInputFile('training.ogg')
    await bot.send_voice(message.chat.id, audio)
    os.remove("training.ogg")

@dp.message(Command('voice'))
async def voice(message: Message):
    voice = FSInputFile("sound.ogg")
    await message.answer_voice(voice)

@dp.message(Command('doc'))
async def doc(message: Message):
    doc = FSInputFile("TG02.pdf")
    await bot.send_document(chat_id=message.chat.id, document=doc)

@dp.message(Command("say"))
async def say(message: Message):
    text = "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –±–æ—Ç–∞!"
    tts = gTTS(text=text, lang='ru')
    tts.save("say.ogg")
    audio = FSInputFile("say.ogg")
    await bot.send_voice(chat_id=message.chat.id, voice=audio)
    os.remove("say.ogg")

@dp.message(F.text)
async def translate_to_english(message: Message):
    translator = Translator()
    translated = translator.translate(message.text, dest='en')
    await message.answer(f"–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π:\n{translated.text}")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
